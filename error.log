Traceback (most recent call last):
  File "/home/katebrich/anaconda3/lib/python3.7/urllib/request.py", line 1319, in do_open
    encode_chunked=req.has_header('Transfer-encoding'))
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 1252, in request
    self._send_request(method, url, body, headers, encode_chunked)
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 1298, in _send_request
    self.endheaders(body, encode_chunked=encode_chunked)
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 1247, in endheaders
    self._send_output(message_body, encode_chunked=encode_chunked)
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 1026, in _send_output
    self.send(msg)
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 966, in send
    self.connect()
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 1414, in connect
    super().connect()
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 938, in connect
    (self.host,self.port), self.timeout, self.source_address)
  File "/home/katebrich/anaconda3/lib/python3.7/socket.py", line 707, in create_connection
    for res in getaddrinfo(host, port, 0, SOCK_STREAM):
  File "/home/katebrich/anaconda3/lib/python3.7/socket.py", line 752, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./pythonScripts/download_dataset.py", line 80, in download_structure
    get_PDB(temp_file, output_PDB, pdb_id, chain_ids, ligands_filter)
  File "./pythonScripts/download_dataset.py", line 30, in get_PDB
    response = restAPI_get(url)
  File "/home/katebrich/Documents/diplomka/GitHub/pythonScripts/helper.py", line 41, in restAPI_get
    with urllib.request.urlopen(req) as f:
  File "/home/katebrich/anaconda3/lib/python3.7/urllib/request.py", line 222, in urlopen
    return opener.open(url, data, timeout)
  File "/home/katebrich/anaconda3/lib/python3.7/urllib/request.py", line 525, in open
    response = self._open(req, data)
  File "/home/katebrich/anaconda3/lib/python3.7/urllib/request.py", line 543, in _open
    '_open', req)
  File "/home/katebrich/anaconda3/lib/python3.7/urllib/request.py", line 503, in _call_chain
    result = func(*args)
  File "/home/katebrich/anaconda3/lib/python3.7/urllib/request.py", line 1362, in https_open
    context=self._context, check_hostname=self._check_hostname)
  File "/home/katebrich/anaconda3/lib/python3.7/urllib/request.py", line 1321, in do_open
    raise URLError(err)
urllib.error.URLError: <urlopen error [Errno -3] Temporary failure in name resolution>
Traceback (most recent call last):
  File "/home/katebrich/anaconda3/lib/python3.7/urllib/request.py", line 1319, in do_open
    encode_chunked=req.has_header('Transfer-encoding'))
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 1252, in request
    self._send_request(method, url, body, headers, encode_chunked)
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 1298, in _send_request
    self.endheaders(body, encode_chunked=encode_chunked)
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 1247, in endheaders
    self._send_output(message_body, encode_chunked=encode_chunked)
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 1026, in _send_output
    self.send(msg)
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 966, in send
    self.connect()
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 1414, in connect
    super().connect()
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 938, in connect
    (self.host,self.port), self.timeout, self.source_address)
  File "/home/katebrich/anaconda3/lib/python3.7/socket.py", line 707, in create_connection
    for res in getaddrinfo(host, port, 0, SOCK_STREAM):
  File "/home/katebrich/anaconda3/lib/python3.7/socket.py", line 752, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./pythonScripts/download_dataset.py", line 83, in download_structure
    get_FASTA(temp_file, output_FASTA, pdb_id, chain_ids)
  File "./pythonScripts/download_dataset.py", line 67, in get_FASTA
    entity_id = get_entity_id(pdb_id, chain_id) #todo mit udelany cache
  File "/home/katebrich/Documents/diplomka/GitHub/pythonScripts/helper.py", line 73, in get_entity_id
    parsedResponse = restAPI_get_xml(url)
  File "/home/katebrich/Documents/diplomka/GitHub/pythonScripts/helper.py", line 51, in restAPI_get_xml
    return xmltodict.parse(restAPI_get(url)) #todo neni neco rychlejsiho? nepotrebuju ordered dictionary...
  File "/home/katebrich/Documents/diplomka/GitHub/pythonScripts/helper.py", line 41, in restAPI_get
    with urllib.request.urlopen(req) as f:
  File "/home/katebrich/anaconda3/lib/python3.7/urllib/request.py", line 222, in urlopen
    return opener.open(url, data, timeout)
  File "/home/katebrich/anaconda3/lib/python3.7/urllib/request.py", line 525, in open
    response = self._open(req, data)
  File "/home/katebrich/anaconda3/lib/python3.7/urllib/request.py", line 543, in _open
    '_open', req)
  File "/home/katebrich/anaconda3/lib/python3.7/urllib/request.py", line 503, in _call_chain
    result = func(*args)
  File "/home/katebrich/anaconda3/lib/python3.7/urllib/request.py", line 1362, in https_open
    context=self._context, check_hostname=self._check_hostname)
  File "/home/katebrich/anaconda3/lib/python3.7/urllib/request.py", line 1321, in do_open
    raise URLError(err)
urllib.error.URLError: <urlopen error [Errno -3] Temporary failure in name resolution>
Traceback (most recent call last):
  File "/home/katebrich/anaconda3/lib/python3.7/urllib/request.py", line 1319, in do_open
    encode_chunked=req.has_header('Transfer-encoding'))
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 1252, in request
    self._send_request(method, url, body, headers, encode_chunked)
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 1298, in _send_request
    self.endheaders(body, encode_chunked=encode_chunked)
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 1247, in endheaders
    self._send_output(message_body, encode_chunked=encode_chunked)
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 1026, in _send_output
    self.send(msg)
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 966, in send
    self.connect()
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 1414, in connect
    super().connect()
  File "/home/katebrich/anaconda3/lib/python3.7/http/client.py", line 938, in connect
    (self.host,self.port), self.timeout, self.source_address)
  File "/home/katebrich/anaconda3/lib/python3.7/socket.py", line 707, in create_connection
    for res in getaddrinfo(host, port, 0, SOCK_STREAM):
  File "/home/katebrich/anaconda3/lib/python3.7/socket.py", line 752, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./pythonScripts/download_dataset.py", line 83, in download_structure
    get_FASTA(temp_file, output_FASTA, pdb_id, chain_ids)
  File "./pythonScripts/download_dataset.py", line 69, in get_FASTA
    response = restAPI_get(url)
  File "/home/katebrich/Documents/diplomka/GitHub/pythonScripts/helper.py", line 41, in restAPI_get
    with urllib.request.urlopen(req) as f:
  File "/home/katebrich/anaconda3/lib/python3.7/urllib/request.py", line 222, in urlopen
    return opener.open(url, data, timeout)
  File "/home/katebrich/anaconda3/lib/python3.7/urllib/request.py", line 525, in open
    response = self._open(req, data)
